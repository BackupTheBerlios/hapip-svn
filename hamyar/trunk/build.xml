<!--

  CavetEmptor ANT build script.

-->
<project name="hamyar" default="unittest" basedir=".">

    <!-- Name of project and version -->
    <property name="proj.name"      value="hamyar"/>
    <property name="proj.shortname" value="hamyar"/>
    <property name="version"        value="0.1"/>

	<!-- Global properties for this build -->
	<property name="src.java.dir"   value="src/"/>
    <property name="src.etc.dir"    value="etc/"/>
    <property name="web.dir"        value="WebRoot"/>
    <property name="lib.dir"        value="WebRoot/WEB-INF/lib"/>
	<property name="build.dir"      value="build"/>
	<property name="classes.dir"    value="${build.dir}/WEB-INF/classes"/>
    <property name="test.out.dir"   value="${basedir}/testout"/>
    <property name="warfile.name" value="hamyar"/>
    <property name="catalina.home" value="/home/as/java/jakarta-tomcat-5.0.30"/>

	<!-- Classpath declaration -->
	<path id="project.classpath">
        <pathelement location="${classes.dir}"/>
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
            <include name="**/*.zip"/>
		</fileset>
	</path>

    <!-- Useful shortcuts -->
	<patternset id="meta.files">
		<include name="**/*.xml"/>
	</patternset>
    <patternset id="property.files">
        <include name="**/*.properties"/>
    </patternset>

    <!-- Tasks -->

	<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
		<classpath refid="project.classpath"/>
	</taskdef>

    <taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask">
        <classpath refid="project.classpath"/>
    </taskdef>

	<!-- Targets -->

	<target name="clean" description="Cleans up build and dist directories">
		<delete dir="${build.dir}"/>
        <delete dir="${test.out.dir}"/>
        <delete>
            <fileset dir="${basedir}" includes="caveatemptor.*"/>
        </delete>

	</target>

	<target name="compiletest" description="Compile the tests">
		<mkdir dir="${classes.dir}"/>
		<javac
			srcdir="${src.java.dir}"
			destdir="${classes.dir}"
			nowarn="on">
			<classpath refid="project.classpath"/>
		</javac>
	</target>

    <target name="compileResources">
       <native2ascii encoding="UTF-8" dest="${classes.dir}/com/tarhyar/resources" src="${src.java.dir}/com/tarhyar/resources">
           <include name="**/*.properties"/>
       </native2ascii>
    </target>

    <target name="copyresources" depends="compileResources"
            description="Copy all mapping and configuration files to build" >
        <!-- Copy over the mapping files -->
        <copy todir="${classes.dir}">
            <fileset dir="${src.etc.dir}">
                <patternset refid="meta.files"/>
                <patternset refid="property.files"/>
            </fileset>
        </copy>
        <copy todir="${classes.dir}">
            <fileset dir="${src.java.dir}">
                <patternset refid="meta.files"/>
            </fileset>
        </copy>
        <copy todir="${build.dir}">
            <fileset dir="${web.dir}"/>
        </copy>
    </target>

	<target name="unittest" depends="clean, compiletest, copyresources" description="Run the test suite">
        <mkdir dir="${test.out.dir}"/>
		<junit printsummary="yes" fork="yes" haltonfailure="yes">
            <classpath refid="project.classpath"/>
			<formatter type="plain"/>
			<test name="com.tarhyar.test.AllTests" todir="${test.out.dir}" haltonfailure="no"/>
		</junit>
	</target>
<!--
-->
    <!--<target name="unittest.ejb3" depends="clean, compiletest, copyresources" description="Run the EJB3 test">-->
        <!--<mkdir dir="${test.out.dir}"/>-->
        <!--<junit printsummary="yes" fork="yes" haltonfailure="yes">-->
            <!--<classpath refid="project.classpath"/>-->
            <!--<formatter type="plain"/>-->
            <!--<test name="org.hibernate.ce.auction.test.Ejb3Test" todir="${test.out.dir}" haltonfailure="no"/>-->
        <!--</junit>-->
    <!--</target>-->

	<target name="exportddl" depends="clean, compiletest, copyresources" description="Export the DDL to file in build dir">
        <hibernatetool destdir="${build.dir}">
            <!--<annotationconfiguration configurationfile="${classes.dir}/hibernate.cfg.xml"/>-->
            <configuration configurationfile="${classes.dir}/hibernate.cfg.xml" /> 
            <hbm2ddl export="true" console="true" drop="true" create="true"
                     outputfilename="${proj.shortname}.ddl" delimiter=";"/>
        </hibernatetool>
	</target>

    <target name="createWar" depends="compiletest, copyresources" >
        <echo message="Creating file ${warfile.name}.war"/>
        <delete file="${warfile.name}"/>
        <war warfile="${warfile.name}.war"
             webxml="${build.dir}/WEB-INF/web.xml"
             compress="false"
             basedir="${build.dir}">
            <metainf dir="${build.dir}/META-INF"/>
         </war>
    </target>
    <target name="deploy" depends="createWar">
        <echo message="Deploying war file"/>
        <copy file="${warfile.name}.war" todir="${catalina.home}/webapps">

        </copy>
    </target>
<!-- Some experimental targets...

    <target name="dbunit.template" description="Generates skeleton files for DBUnit from mapping XML files">
        <style basedir="${src.java.dir}/org/hibernate/ce/auction/model"
               destdir="${basedir}"
               style="${src.java.dir}/org/hibernate/ce/auction/test/dbunit.xsl">
            <mapper type="glob" from="*.hbm.xml" to="*.data.xml"/>
            <include name="**/*.hbm.xml"/>
        </style>
    </target>


    <target name="test.prepare" depends="clean, copyresources" description="Generates POJO source and DB schema from cfg">
        <hibernatetool destdir="${src.java.dir}">
            <configuration configurationfile="${src.java.dir}/hibernate.cfg.xml"/>
            <hbm2java/>
            <hbm2ddl/>
            <hbm2ddl export="true" console="false" drop="false" create="true"
                     outputfilename="${build.dir}/${proj.shortname}.ddl" delimiter=";"/>
        </hibernatetool>
    </target>

    <target name="test.run" depends="compiletest" description="Bytecode instrumentation for lazy loading and test run">
        <taskdef name="instrument"
                classname="org.hibernate.tool.instrument.InstrumentTask"
                classpathref="project.classpath"/>

        <instrument verbose="true">
            <fileset dir="${classes.dir}">
                <include name="*.class"/>
            </fileset>
        </instrument>
        <java fork="true" classname="Test" classpathref="project.classpath"/>
    </target>
-->

</project>
